import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Hospital Appointment System',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: DoctorLoginPage(),
    );
  }
}

class DoctorLoginPage extends StatefulWidget {
  @override
  _DoctorLoginPageState createState() => _DoctorLoginPageState();
}

class _DoctorLoginPageState extends State<DoctorLoginPage> {
  bool _isLogin = true;

  void _toggleForm() {
    setState(() {
      _isLogin = !_isLogin;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(
          _isLogin ? 'Doctor Login' : 'Doctor Sign Up',
          style: TextStyle(
            fontSize: 24,
            fontWeight: FontWeight.bold,
          ),
        ),
        backgroundColor: Colors.blue,
        centerTitle: true,
      ),
      body: Center(
        child: Padding(
          padding: const EdgeInsets.all(16.0),
          child: SingleChildScrollView(
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              children: <Widget>[
                if (!_isLogin) _buildInputField('Name', Icons.person),
                if (!_isLogin) SizedBox(height: 20),
                if (!_isLogin) _buildInputField('Specialization', Icons.work),
                if (!_isLogin) SizedBox(height: 20),
                if (!_isLogin)
                  _buildUploadButton('Upload Certificate', Icons.file_upload),
                _buildInputField('Doctor Username', Icons.person_outline),
                SizedBox(height: 20),
                _buildInputField('Password', Icons.lock_outline,
                    isPassword: true),
                SizedBox(height: 20),
                _buildLoginSignUpButton(),
                SizedBox(height: 20),
                _buildToggleFormButton(),
                if (!_isLogin) SizedBox(height: 20),
                if (!_isLogin)
                  _buildUploadButton('Upload Photo', Icons.camera_alt),
              ],
            ),
          ),
        ),
      ),
    );
  }

  Widget _buildInputField(String label, IconData icon,
      {bool isPassword = false}) {
    return Container(
      decoration: BoxDecoration(
        border: Border.all(color: Colors.blue),
        borderRadius: BorderRadius.circular(10),
      ),
      child: Padding(
        padding: const EdgeInsets.symmetric(horizontal: 16),
        child: TextFormField(
          obscureText: isPassword,
          decoration: InputDecoration(
            labelText: label,
            icon: Icon(icon, color: Colors.blue),
            border: InputBorder.none,
          ),
        ),
      ),
    );
  }

  Widget _buildUploadButton(String label, IconData icon) {
    return ElevatedButton.icon(
      onPressed: () {
        // TODO: Add logic to upload certificate or photo
      },
      icon: Icon(icon),
      label: Text(label),
      style: ElevatedButton.styleFrom(
        primary: Colors.blue,
        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),
        padding: EdgeInsets.symmetric(vertical: 12, horizontal: 24),
      ),
    );
  }

  Widget _buildLoginSignUpButton() {
    return ElevatedButton(
      onPressed: () {
        // TODO: Add doctor's login or sign-up logic here
        // If login or sign-up is successful, navigate to the doctor's interface
        Navigator.of(context).pushReplacement(
          MaterialPageRoute(
            builder: (_) => DoctorHomePage(),
          ),
        );
      },
      child: Text(
        _isLogin ? 'Login' : 'Sign Up',
        style: TextStyle(
          fontSize: 18,
          fontWeight: FontWeight.bold,
        ),
      ),
      style: ElevatedButton.styleFrom(
        primary: Colors.blue,
        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),
        padding: EdgeInsets.symmetric(vertical: 12, horizontal: 24),
      ),
    );
  }

  Widget _buildToggleFormButton() {
    return TextButton(
      onPressed: _toggleForm,
      child: Text(
        _isLogin
            ? "Don't have an account? Sign Up"
            : 'Already have an account? Login',
        style: TextStyle(
          color: Colors.blue,
          fontWeight: FontWeight.bold,
        ),
      ),
    );
  }
}

class DoctorHomePage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Welcome Doctor'),
      ),
      body: Stack(
        children: [
          // Background image
          Image.asset(
            'assets/background_image.jpg', // Replace with your background image path
            fit: BoxFit.cover,
            width: double.infinity,
            height: double.infinity,
          ),
          Padding(
            padding: const EdgeInsets.all(16.0),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.stretch,
              children: <Widget>[
                Text(
                  'Featured',
                  style: TextStyle(
                    fontSize: 24,
                    fontWeight: FontWeight.bold,
                  ),
                ),
                SizedBox(height: 16),
                Container(
                  height: 200,
                  child: ListView.builder(
                    scrollDirection: Axis.horizontal,
                    itemCount: 5,
                    itemBuilder: (context, index) {
                      return FeaturedItemCard(
                          index: index); // Pass the index here
                    },
                  ),
                ),
                SizedBox(height: 24),
                Text(
                  'Quick Access',
                  style: TextStyle(
                    fontSize: 24,
                    fontWeight: FontWeight.bold,
                  ),
                ),
                SizedBox(height: 16),
                Expanded(
                  child: GridView.builder(
                    gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
                      crossAxisCount: 2,
                      childAspectRatio: 1.0,
                    ),
                    itemCount: 6,
                    itemBuilder: (context, index) {
                      return CategoryItemCard(
                        imagePath: getCategoryImagePath(index),
                        categoryName: getCategoryName(index),
                      );
                    },
                  ),
                ),
              ],
            ),
          ),
        ],
      ),
      bottomNavigationBar: Container(
        color: Colors.lightBlue
            .withOpacity(0.7), // Make the navigation bar transparent
        child: BottomNavigationBar(
          items: const <BottomNavigationBarItem>[
            BottomNavigationBarItem(
              icon: Icon(Icons.home),
              label: 'Home Page',
            ),
            BottomNavigationBarItem(
              icon: Icon(Icons.list),
              label: 'ToDo',
            ),
            BottomNavigationBarItem(
              icon: Icon(Icons.person),
              label: 'Profile',
            ),
          ],
        ),
      ),
    );
  }

  // Helper function to get category image path
  String getCategoryImagePath(int index) {
    switch (index) {
      case 0:
        return 'assets/attendance.jpg';
      case 1:
        return 'assets/emergency.png';
      case 2:
        return 'assets/appointment.png';
      case 3:
        return 'assets/portfolio.png';
      case 4:
        return 'assets/track.png';
      default:
        return 'assets/default.jpg'; // Default image path
    }
  }

  // Helper function to get category name
  String getCategoryName(int index) {
    switch (index) {
      case 0:
        return 'Attendance';
      case 1:
        return 'Emergency';
      case 2:
        return 'Appointment';
      case 3:
        return 'Portfolio';
      case 4:
        return 'Track';
      // Add more cases for other categories
      default:
        return 'Unknown Category'; // Default category name
    }
  }
}

class FeaturedItemCard extends StatelessWidget {
  final int index;

  FeaturedItemCard({required this.index});

  @override
  Widget build(BuildContext context) {
    return Card(
      elevation: 3,
      color: Colors.blue.withOpacity(0.0),
      child: Column(
        children: <Widget>[
          Expanded(
            child: Image.asset(
              'assets/news${index + 1}.jpg', // Construct the image path based on the index
              fit: BoxFit.fill, // Ensure the image fills the available space
            ),
          ),
          // No Text widget for the title
        ],
      ),
    );
  }
}

class CategoryItemCard extends StatelessWidget {
  final String imagePath;
  final String categoryName;

  CategoryItemCard({required this.imagePath, required this.categoryName});

  @override
  Widget build(BuildContext context) {
    return Card(
      elevation: 3,
      color: Colors.lightBlue
          .withOpacity(0.3), // Adjust the opacity value as needed
      child: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: <Widget>[
          Image.asset(
            imagePath,
            height: 100,
          ),
          SizedBox(height: 8),
          Text(
            categoryName,
            style: TextStyle(
              fontWeight: FontWeight.bold,
            ),
          ),
        ],
      ),
    );
  }
}
////


up is doc ogin

////

down is main dart//


import 'package:flutter/material.dart';
import 'package:video_player/video_player.dart';

import 'doctor_login_page.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Hospital Appointment System',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  late VideoPlayerController _controller;

  @override
  void initState() {
    super.initState();
    _controller = VideoPlayerController.asset('assets/animation_start.mp4')
      ..initialize().then((_) {
        setState(() {});
        _controller
            .play(); // Automatically play the video when it's initialized

        // Listen for the end of the video
        _controller.addListener(() {
          if (_controller.value.position == _controller.value.duration) {
            // Video has ended, navigate to the screen with doctor and patient options
            Navigator.of(context).pushReplacement(
              MaterialPageRoute(
                builder: (_) => UserSelectionScreen(),
              ),
            );
          }
        });
      });
  }

  @override
  void dispose() {
    super.dispose();
    _controller.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return _controller.value.isInitialized
        ? AspectRatio(
            aspectRatio: _controller.value.aspectRatio,
            child: VideoPlayer(_controller),
          )
        : CircularProgressIndicator();
  }
}

// Define your custom page widgets here
class HomePage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Center(
      child: Text('Home Page'),
    );
  }
}

class ProfilePage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Center(
      child: Text('Profile Page'),
    );
  }
}

class AppointmentsPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Center(
      child: Text('Appointments Page'),
    );
  }
}

class UserSelectionScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Select User Role'),
      ),
      body: Container(
        decoration: BoxDecoration(
          image: DecorationImage(
            image: AssetImage(
                'assets/background.png'), // Replace with your image path
            fit: BoxFit.cover,
          ),
        ),
        child: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              GestureDetector(
                onTap: () {
                  // Navigate to the doctor's login page
                  Navigator.of(context).push(
                    MaterialPageRoute(
                      builder: (_) =>
                          DoctorLoginPage(), // Use DoctorLoginPage here
                    ),
                  );
                },
                child: Container(
                  width: MediaQuery.of(context).size.width * 0.8,
                  padding: EdgeInsets.all(16),
                  decoration: BoxDecoration(
                    color: Colors.blue
                        .withOpacity(0.8), // Background color with opacity
                    borderRadius: BorderRadius.circular(10),
                  ),
                  child: Column(
                    children: [
                      Icon(
                        Icons.person,
                        size: 60,
                        color: Colors.white,
                      ),
                      SizedBox(height: 10),
                      Text(
                        'Doctor',
                        style: TextStyle(
                          color: Colors.white,
                          fontSize: 18,
                        ),
                      ),
                    ],
                  ),
                ),
              ),
              SizedBox(height: 20),
              GestureDetector(
                onTap: () {
                  // Navigate to the patient's interface
                  Navigator.of(context).push(
                    MaterialPageRoute(
                      builder: (_) => PatientHomePage(),
                    ),
                  );
                },
                child: Container(
                  width: MediaQuery.of(context).size.width * 0.8,
                  padding: EdgeInsets.all(16),
                  decoration: BoxDecoration(
                    color: Colors.green
                        .withOpacity(0.8), // Background color with opacity
                    borderRadius: BorderRadius.circular(10),
                  ),
                  child: Column(
                    children: [
                      Icon(
                        Icons.person_outline,
                        size: 60,
                        color: Colors.white,
                      ),
                      SizedBox(height: 10),
                      Text(
                        'Patient',
                        style: TextStyle(
                          color: Colors.white,
                          fontSize: 18,
                        ),
                      ),
                    ],
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

class DoctorHomePage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Welcome Doctor'),
      ),
      body: Center(
        child: Text('Doctor Interface Content'),
      ),
    );
  }
}

class PatientHomePage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Welcome Patient'),
      ),
      body: Center(
        child: Text('Patient Interface Content'),
      ),
    );
  }
}
